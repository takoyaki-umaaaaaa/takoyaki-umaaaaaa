// *************************************************************************
// 英字フォント変換マクロ
// 選択範囲の英字を指定したフォントに変換
//
// ※注意1	「Struck capital」は大文字の "CHNPQRZ" を変換できません。
// ※注意2	メニューを出したままでいると「マクロ実行中…」のDialogが表示される。
//			これはsakura editorのマクロ無限ループ対策によるもの。
//			[キャンセル]押下かメニュー選択で消去が可能。
// *************************************************************************


try {
	// 1. 𝐁𝐨𝐥𝐝 𝐒𝐞𝐫𝐢𝐟
	var boldSerifAZ = [0xd835, 0xdbbf];
	var boldSerifaz = [0xd835, 0xdbb9];
	var boldSerif09 = [0xd835, 0xdf9e];
	// 2. 𝕭𝖔𝖑𝖉 𝕱𝖗𝖆𝖐𝖙𝖚𝖗
	var boldFrakturAZ = [0xd835, 0xdd2b];
	var boldFrakturaz = [0xd835, 0xdd25];
	var boldFraktur09 = null;	// 割り当て無し
	// 3. 𝕊𝕥𝕣𝕦𝕔𝕜 𝕔𝕒𝕡𝕚𝕥𝕒𝕝	※注意：大文字の CHNPQRZ は文字が未割り当てのため表示できません
	var doubleStruckCapitalAZ = [0xd835, 0xdcf7];
	var doubleStruckCapitalaz = [0xd835, 0xdcf1];
	var doubleStruckCapital09 = [0xd835, 0xdfa8];

	// Font選択メニュー
	var menustr = "𝐁𝐨𝐥𝐝 𝐒𝐞𝐫𝐢𝐟,𝕭𝖔𝖑𝖉 𝕱𝖗𝖆𝖐𝖙𝖚𝖗,𝕊𝕥𝕣𝕦𝕔𝕜 𝕔𝕒𝕡𝕚𝕥𝕒𝕝";

	// 変換対象を選択済みかチェック
	var selectedStr = Editor.GetSelectedString(0);
	if( selectedStr < 1 ){
		var e = new Error(0, "変換したい文字を選択後に\r\nマクロを呼び出してください。");
		throw e;
	}

	var selectedAZ = null;
	var selectedaz = null;
	var selected09 = null;

	// カーソル付近にメニューを表示し、変換先Fontを選択
	var item = Editor.CreateMenu( 1, menustr );	// 戻り値は1始まり。0はキャンセル
	switch( item ){
	case 1:	// 1. 𝐁𝐨𝐥𝐝 𝐒𝐞𝐫𝐢𝐟
		selectedAZ = boldSerifAZ;
		selectedaz = boldSerifaz;
		selected09 = boldSerif09;
		break;
	case 2:	// 2. 𝕭𝖔𝖑𝖉 𝕱𝖗𝖆𝖐𝖙𝖚𝖗
		selectedAZ = boldFrakturAZ;
		selectedaz = boldFrakturaz;
		selected09 = boldFraktur09;
		break;
	case 3:	// 3. 𝕊𝕥𝕣𝕦𝕔𝕜 𝕔𝕒𝕡𝕚𝕥𝕒𝕝
		selectedAZ = doubleStruckCapitalAZ;
		selectedaz = doubleStruckCapitalaz;
		selected09 = doubleStruckCapital09;
		break;
	default:
		break;
	}

	// 変換実行
	if( selectedAZ != null && selectedaz != null ){
		var str = convToNewFont( selectedStr, selectedAZ, selectedaz, selected09 );
		Editor.InsText( str );
	}
}// --- メイン処理終了 ---
catch( e ){
	Editor.InfoMsg( e.description );
}




// 変換関数
function convToNewFont( str, diffAZ, diffaz, diff09 ){
	// 大文字変換
	var conv1 = diffAZ;
	if( diffAZ != null )
		conv1 = str.replace( /[A-Z]/g, function(c){
			return String.fromCharCode(diffAZ[0], c.charCodeAt(0) + diffAZ[1]);
		});
	// 小文字変換
	var conv2 = conv1;
	if( diffaz != null )
		conv2 = conv1.replace( /[a-z]/g, function(c){
			return String.fromCharCode(diffaz[0], c.charCodeAt(0) + diffaz[1]);
		});
	// 数字変換
	var conv3 = conv2;
	if( diff09 != null )
		conv3 = conv2.replace( /[0-9]/g, function(c){
			return String.fromCharCode(diff09[0], c.charCodeAt(0) + diff09[1]);
		});
	return conv3;
}
